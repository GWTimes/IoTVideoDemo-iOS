diff -r -u ./v1.4(200d)-Release/IoTVideo-iOS-v1.4(200d)-Release/SDK/Frameworks/IVVAS.framework/Headers/IVVAS.h ./v1.4(2070)-Debug/IoTVideo-iOS-v1.4(2070)-Debug/SDK/Frameworks/IVVAS.framework/Headers/IVVAS.h
--- ./v1.4(200d)-Release/IoTVideo-iOS-v1.4(200d)-Release/SDK/Frameworks/IVVAS.framework/Headers/IVVAS.h	2021-06-18 15:05:36.000000000 +0800
+++ ./v1.4(2070)-Debug/IoTVideo-iOS-v1.4(2070)-Debug/SDK/Frameworks/IVVAS.framework/Headers/IVVAS.h	2021-07-08 10:45:33.000000000 +0800
@@ -10,8 +10,8 @@
 #import <IoTVideo/IVNetwork_p2p.h>
 
 /* ⚠️Automatically generated by script, do not manually edit! */
-#define kIVVASVersion "1.4(200d) Release" /* Commit:f982911 */
-#define kIVVASCompileDate "2021-06-18 14:53:48"
+#define kIVVASVersion "1.4(2070) Debug" /* Commit:1f1d31f */
+#define kIVVASCompileDate "2021-07-08 10:45:31"
 
 /// 套餐服务类型
 typedef NS_ENUM(NSInteger, IVVASServiceType) {
@@ -143,7 +143,7 @@
 /// 过期的方法
 @interface IVVAS (Deprecated)
 
-/// 获取云存视频信息
+/// 获取云存视频信息（已过期）
 /// - 用于终端用户在云存页面中对云存服务时间内的日期进行标注，区分出是否有云存视频文件。
 /// @param deviceId 设备id
 /// @param timezone 相对于0时区的秒数，例如东八区28800
@@ -151,7 +151,7 @@
 /// @deprecated Use `-getVideoDateListWithDeviceId:timezone:completionHandler:` instead.
 - (void)getVideoListWithDeviceId:(NSString *)deviceId timezone:(NSInteger)timezone responseHandler:(IVNetworkResponseHandler _Nullable)responseHandler API_DEPRECATED("Use -getVideoDateListWithDeviceId:timezone:completionHandler: instead", ios(2.0,9.0));
 
-/// 获取云存回放m3u8列表
+/// 获取云存回放m3u8列表（已过期）
 ///- 终端用户获取云存储的m3u8列表进行回放，同时根据返回的列表对时间轴进行渲染。
 /// @param deviceId 设备id
 /// @param timezone  相对于0时区的秒数，例如东八区28800
@@ -161,7 +161,7 @@
 /// @deprecated Use `-getVideoPlayListWithDeviceId:startTime:endTime:completionHandler:` instead.
 - (void)getVideoPlaybackListWithDeviceId:(NSString *)deviceId timezone:(NSInteger)timezone startTime:(NSTimeInterval)startTime endTime:(NSTimeInterval)endTime responseHandler:(IVNetworkResponseHandler _Nullable)responseHandler API_DEPRECATED("Use -getVideoPlayListWithDeviceId:startTime:endTime:completionHandler: instead", ios(2.0,9.0));
 
-/// 获取事件列表
+/// 获取事件列表（已过期）
 /// @param deviceId 设备id
 /// @param startTime 事件告警开始UTC时间,单位秒
 /// @param endTime 事件告警结束UTC时间，当为0时，默认当天的23点59分59秒
Binary files ./v1.4(200d)-Release/IoTVideo-iOS-v1.4(200d)-Release/SDK/Frameworks/IVVAS.framework/IVVAS and ./v1.4(2070)-Debug/IoTVideo-iOS-v1.4(2070)-Debug/SDK/Frameworks/IVVAS.framework/IVVAS differ
Binary files ./v1.4(200d)-Release/IoTVideo-iOS-v1.4(200d)-Release/SDK/Frameworks/IVVAS.framework/Info.plist and ./v1.4(2070)-Debug/IoTVideo-iOS-v1.4(2070)-Debug/SDK/Frameworks/IVVAS.framework/Info.plist differ
Only in ./v1.4(2070)-Debug/IoTVideo-iOS-v1.4(2070)-Debug/SDK/Frameworks/IVVAS.framework: _CodeSignature
diff -r -u ./v1.4(200d)-Release/IoTVideo-iOS-v1.4(200d)-Release/SDK/Frameworks/IoTVideo.framework/Headers/IVAVDefine.h ./v1.4(2070)-Debug/IoTVideo-iOS-v1.4(2070)-Debug/SDK/Frameworks/IoTVideo.framework/Headers/IVAVDefine.h
--- ./v1.4(200d)-Release/IoTVideo-iOS-v1.4(200d)-Release/SDK/Frameworks/IoTVideo.framework/Headers/IVAVDefine.h	2021-06-18 15:05:37.000000000 +0800
+++ ./v1.4(2070)-Debug/IoTVideo-iOS-v1.4(2070)-Debug/SDK/Frameworks/IoTVideo.framework/Headers/IVAVDefine.h	2021-07-08 10:45:33.000000000 +0800
@@ -9,11 +9,11 @@
 #import <Foundation/Foundation.h>
 #import <AVFoundation/AVFoundation.h>
 #import "IVConnection.h"
+#import "IVError.h"
 
 #ifndef IVAVDefine_h
 #define IVAVDefine_h
 
-
 /// 播放器状态
 typedef NS_ENUM(NSInteger, IVPlayerStatus) {
     /// 停止中...
@@ -30,8 +30,10 @@
     IVPlayerStatusPlaying       = 4,
     /// 已暂停
     IVPlayerStatusPaused        = 5,
-    /// 快进中...
-    IVPlayerStatusFastForward   = 6,
+    /// 快进中...（已过期）
+    IVPlayerStatusFastForward API_DEPRECATED("No longer supported, use `-playbackSpeed` instated.", ios(2.0, 8.0)) = 6,
+    /// 跳转中...
+    IVPlayerStatusSeeking       = 7,
 };
 
 /// 多媒体类型
@@ -76,6 +78,8 @@
 
 /// 音频编码类型
 typedef NS_ENUM(NSUInteger, IVAudioCodecType) {
+    /// PCM
+    IVAudioCodecTypePCM = 0,
     /// G711A
     IVAudioCodecTypeG711A  = 1,
     /// G711U
@@ -88,6 +92,8 @@
     IVAudioCodecTypeAMR    = 5,
     /// ADPCMA
     IVAudioCodecTypeADPCMA = 6,
+    /// OPUS
+    IVAudioCodecTypeOPUS   = 7,
 };
 
 /// 音频每个采样的位宽
@@ -180,29 +186,4 @@
     uint32_t            videoHeight;       //!< 视频像素高度
 } IVAVHeader;
 
-/// 播放器错误码 [21030-21049]
-typedef NS_ENUM(NSUInteger, IVPlayerError) {
-    /// 方法选择器无响应、未实现协议方法
-    IVPlayerError_NoRespondsToSelector     = 21030,
-    /// 参数错误
-    IVPlayerError_InvalidParameter         = 21031,
-    /// 录像列表为空
-    IVPlayerError_PlaybackListEmpty        = 21032,
-    /// 录像列表数据异常
-    IVPlayerError_PlaybackDataErr          = 21033,
-    /// APP正在录制音视频流
-    IVPlayerError_RecorderIsRunning        = 21034,
-    /// 视频分辨率已改变
-    IVPlayerError_VideoResolutionChanged   = 21035,
-    /// 编码器暂不可用
-    IVPlayerError_EncoderNotAvailableNow   = 21036,
-    /// 不支持的录像列表版本
-    IVPlayerError_PlaybackListVerErr       = 21037,
-    /// 设备端操作失败
-    IVPlayerError_DeviceOperationFailed    = 21038,
-    /// 录制器暂不可用
-    IVPlayerError_RecorderNotAvailableNow  = 21039,
-};
-
-
 #endif /* IVAVDefine_h */
diff -r -u ./v1.4(200d)-Release/IoTVideo-iOS-v1.4(200d)-Release/SDK/Frameworks/IoTVideo.framework/Headers/IVAVRecordable.h ./v1.4(2070)-Debug/IoTVideo-iOS-v1.4(2070)-Debug/SDK/Frameworks/IoTVideo.framework/Headers/IVAVRecordable.h
--- ./v1.4(200d)-Release/IoTVideo-iOS-v1.4(200d)-Release/SDK/Frameworks/IoTVideo.framework/Headers/IVAVRecordable.h	2021-06-18 15:05:37.000000000 +0800
+++ ./v1.4(2070)-Debug/IoTVideo-iOS-v1.4(2070)-Debug/SDK/Frameworks/IoTVideo.framework/Headers/IVAVRecordable.h	2021-07-08 10:45:33.000000000 +0800
@@ -47,7 +47,17 @@
 @property (nonatomic, assign, readonly) BOOL isRecording;
 
 /// 开始录像
-- (void)startRecordingWithHeader:(IVAVHeader)avheader channel:(uint32_t)channel savePath:(NSString *)savePath completionHandler:(void(^)(NSString * _Nullable savePath, NSError * _Nullable error))completionHandler;
+- (void)startRecordingWithHeader:(IVAVHeader)avheader
+                         channel:(uint32_t)channel
+                        savePath:(NSString *)savePath
+               completionHandler:(void(^)(NSString * _Nullable savePath, NSError * _Nullable error))completionHandler;
+
+/// 开始录像, 带时长回调
+- (void)startRecordingWithHeader:(IVAVHeader)avheader
+                         channel:(uint32_t)channel
+                        savePath:(NSString *)savePath
+                durationCallback:(void(^)(NSTimeInterval duration))durationCallback
+               completionHandler:(void(^)(NSString * _Nullable savePath, NSError * _Nullable error))completionHandler;
 
 /// 停止录像
 - (void)stopRecording;
diff -r -u ./v1.4(200d)-Release/IoTVideo-iOS-v1.4(200d)-Release/SDK/Frameworks/IoTVideo.framework/Headers/IVConnection.h ./v1.4(2070)-Debug/IoTVideo-iOS-v1.4(2070)-Debug/SDK/Frameworks/IoTVideo.framework/Headers/IVConnection.h
--- ./v1.4(200d)-Release/IoTVideo-iOS-v1.4(200d)-Release/SDK/Frameworks/IoTVideo.framework/Headers/IVConnection.h	2021-06-18 15:05:37.000000000 +0800
+++ ./v1.4(2070)-Debug/IoTVideo-iOS-v1.4(2070)-Debug/SDK/Frameworks/IoTVideo.framework/Headers/IVConnection.h	2021-07-08 10:45:33.000000000 +0800
@@ -7,6 +7,7 @@
 //
 
 #import <Foundation/Foundation.h>
+#import "IVError.h"
 
 NS_ASSUME_NONNULL_BEGIN
 
@@ -42,22 +43,15 @@
     IVConnStatusConnected       = 2,
 };
 
-/// 连接错误 [21020-21029]
-typedef NS_ENUM(NSUInteger, IVConnError) {
-    /// APP端通道连接数已达上限, 见`MAX_CONNECTION_NUM`
-    IVConnError_ExceedsMaxNumber  = 21020,
-    /// 重复的连接通道, 已存在相同`deviceId + sourceId`
-    IVConnError_Duplicate         = 21021,
-    /// 建立连接失败
-    IVConnError_ConnectFailed     = 21022,
-    /// 连接已断开/连接失败
-    IVConnError_Disconnected      = 21023,
-    /// 用户自定义数据长度超出上限 @c `MAX_PKG_BYTES`
-    IVConnError_ExceedsMaxLength  = 21024,
-    /// 当前连接暂不可用
-    IVConnError_NotAvailableNow   = 21025,
-    /// 发送用户数据失败
-    IVConnError_SendDataFailed    = 21026,
+/// 连接过程子状态
+/// @note 部分设备/场景是没有子状态的
+typedef NS_ENUM(NSInteger, IVConnectingSubstate) {
+    /// 服务器已收到连接请求，正在唤醒设备
+    IVConnectingSubstate_WakingUpDev  = 1,
+    /// 设备已收到唤醒通知，开始握手过程
+    IVConnectingSubstate_Handshaking  = 2,
+    /// 握手过程完成，连接通道已就绪
+    IVConnectingSubstate_ConnectReady = 3,
 };
 
 @class IVConnection;
@@ -73,6 +67,12 @@
 /// @param status 状态
 - (void)connection:(IVConnection *)connection didUpdateStatus:(IVConnStatus)status;
 
+/// 连接过程子状态更新
+/// @note 部分设备/场景是没有子状态的，此代理方法不一定有回调
+/// @param connection 连接实例
+/// @param substate 连接过程子状态
+- (void)connection:(IVConnection *)connection didUpdateConnectingSubstate:(IVConnectingSubstate)substate;
+
 /// 数据接收速率
 /// @param connection 连接实例
 /// @param speed 接收速率(字节/秒)
diff -r -u ./v1.4(200d)-Release/IoTVideo-iOS-v1.4(200d)-Release/SDK/Frameworks/IoTVideo.framework/Headers/IVDeviceMgr.h ./v1.4(2070)-Debug/IoTVideo-iOS-v1.4(2070)-Debug/SDK/Frameworks/IoTVideo.framework/Headers/IVDeviceMgr.h
--- ./v1.4(200d)-Release/IoTVideo-iOS-v1.4(200d)-Release/SDK/Frameworks/IoTVideo.framework/Headers/IVDeviceMgr.h	2021-06-18 15:05:37.000000000 +0800
+++ ./v1.4(2070)-Debug/IoTVideo-iOS-v1.4(2070)-Debug/SDK/Frameworks/IoTVideo.framework/Headers/IVDeviceMgr.h	2021-07-08 10:45:33.000000000 +0800
@@ -21,7 +21,7 @@
 
 /// 查询设备新固件版本信息
 /// @param deviceId 设备id
-/// @param currentVersion 当前版本号 nil: 默认为当前版本号 当针对特定版本的升级时为必填
+/// @param currentVersion 当前设备版本号。nil: 默认为当前设备版本号。新版本固件可以指定某些版本可以升级，这种场景下不传版本 和 不在指定版本列表里面就升级不了
 /// @param language 语言 nil：默认系统语言
 /// @param responseHandler 回调
 + (void)queryDeviceNewVersionWidthDevieId:(NSString *)deviceId currentVersion:(NSString * _Nullable)currentVersion language:(NSString * _Nullable)language responseHandler:(IVNetworkResponseHandler)responseHandler;
diff -r -u ./v1.4(200d)-Release/IoTVideo-iOS-v1.4(200d)-Release/SDK/Frameworks/IoTVideo.framework/Headers/IVError.h ./v1.4(2070)-Debug/IoTVideo-iOS-v1.4(2070)-Debug/SDK/Frameworks/IoTVideo.framework/Headers/IVError.h
--- ./v1.4(200d)-Release/IoTVideo-iOS-v1.4(200d)-Release/SDK/Frameworks/IoTVideo.framework/Headers/IVError.h	2021-06-18 15:05:37.000000000 +0800
+++ ./v1.4(2070)-Debug/IoTVideo-iOS-v1.4(2070)-Debug/SDK/Frameworks/IoTVideo.framework/Headers/IVError.h	2021-07-08 10:45:33.000000000 +0800
@@ -11,9 +11,8 @@
 #ifndef IVError_h
 #define IVError_h
 
-
 /**
-    ====== 错误码区间分布 =====
+    ====== 平台错误码分布概览 =====
     @li [8000-8499]      Asrv错误码
     @li [8500-8699]      Csrv错误码(对接Asrv)
     @li [8799-9999]       预留
@@ -25,40 +24,30 @@
     @li [15000-15999]   UPG相关
     @li [16000-16999]   帮助中心
     @li [17000-17999]    第三方调用
-    @li [20000-20999]    P2P错误码
-    @li [21000-21999]   iOS SDK错误
+    @li [20000-20150]    P2P错误码
+    @li [20151-20199]   客户自定义错误
+    @li [20200-20999]    P2P错误码
+ 👉  @li   [21000-21999]    iOS SDK错误  👈
     @li [22000-22999]   Android SDK错误码
     @li [23000-23999]   PC SDK错误码
     @li [24000-24999]   DEV SDK错误码
  */
 
-/**
-    ===== iOS SDK错误码 =====
-    @li [21000-21019]      消息错误, 详见`IVMessageError`
-    @li [21020-21029]      连接错误, 详见`IVConnError`
-    @li [21030-21049]      播放错误, 详见`IVPlayerError`
-    @li [21050-21059]      预留
-    @li [21060-21079]      下载错误, 详见`IVDowloadError`
-    @li [21080-21099]      ACK错误, 详见`IVAckErr`
- */
 typedef NSUInteger IVErrCode;
 typedef NSUInteger IVReasonCode;
 
 
-/**
-    ===== 设备端ACK错误 =====
- */
-typedef NS_ENUM(IVErrCode, IVAckErr) {
-    IVAckErr_NotSupport     = 21080, //!< 设备端不支持该命令
-    IVAckErr_ParameterErr   = 21081, //!< 设备端判定参数错误
-    IVAckErr_UnknownErr     = 21082, //!< 设备端发生未知错误
-    IVAckErr_NoResponse     = 21083, //!< 设备端无响应(如固件版本未支持，网络故障、程序故障)
+/// 常见服务器错误码 [8000-8499]
+typedef NS_ENUM(IVErrCode, IVASrvErr) {
+    IVASrvErr_dst_offline                   = 8000, //!< 目标离线
+    IVASrvErr_dst_notexsit                  = 8002, //!< 目标不存在
+    IVASrvErr_dst_error_relation            = 8003, //!< 非法关系链
+    IVASrvErr_binderror_dev_usr_has_bind    = 8022, //!< 设备已经绑定此用户
+    IVASrvErr_binderror_dev_has_bind_other  = 8023, //!< 设备已经绑定其他用户
+    IVASrvErr_binderror_customer_diffrent   = 8024, //!< 设备的客户ID与用户的客户ID不一致
 };
 
-
-/**
-    ===== P2P错误码 =====
- */
+/// P2P错误码 [20000-20999]
 typedef NS_ENUM(IVErrCode, IVTermErr) {
     //!< 终端使用
     IVTermErr_msg_send_peer_timeout          = 20001, //!< 消息发送给对方超时
@@ -89,7 +78,7 @@
     IVTermErr_msg_gdm_handle_no_cb_registered = 20104, //!< 设备未注册相应的ACtion回调函数
     IVTermErr_msg_gdm_handle_buildin_prowritable_error = 20105,//!< 设备不允许通过局域网修改内置可写对象
 
-    IVTermErr_msg_saas_hangup_code_invalid    = 20135, //!< 设备端应用层挂断但是错误码超过范围
+    IVTermErr_msg_saas_hungup_code_invalid    = 20135, //!< 设备saas层挂断但是错误码给的超过范围
 
     //录像文件相关错误
     IVTermErr_msg_wait_option_timeout_hangup  = 20136, //!< 下载文件过程中，设备SDK等待新的操作超时导致挂断
@@ -101,18 +90,115 @@
     IVTermErr_msg_user_cmd_type_error         = 20141, //!< 不支持的 user cmd 类型
     IVTermErr_msg_user_cmd_version_error      = 20142, //!< 不支持的 user cmd 版本
     IVTermErr_msg_user_cmd_param_error        = 20143, //!< user cmd 参数超出范围
+    IVTermErr_msg_user_cmd_option_mismatch    = 20145, //!< 操作和状态不匹配，比如对讲已经开启但是又开启
+    IVTermErr_msg_user_cmd_saas_err_invalid   = 20146, //!< saas层返回的错误码超过范围
 };
 
-/**
-   ===== 常见服务器错误码 =====
-*/
-typedef NS_ENUM(IVErrCode, IVASrvErr) {
-    IVASrvErr_dst_offline = 8000, //!< 目标离线
-    IVASrvErr_dst_notexsit = 8002, //!< 目标不存在
-    IVASrvErr_dst_error_relation = 8003, //!< 非法关系链
-    IVASrvErr_binderror_dev_usr_has_bind = 8022, //!< 设备已经绑定此用户
-    IVASrvErr_binderror_dev_has_bind_other = 8023, //!< 设备已经绑定其他用户
-    IVASrvErr_binderror_customer_diffrent = 8024, //!< 设备的客户ID与用户的客户ID不一致
+/// iOS消息管理错误码 [21000-21019]
+typedef NS_ENUM(IVErrCode, IVMessageError) {
+    /// 消息重复、消息正在发送
+    IVMessageError_duplicate        = 21000,
+    /// 消息发送失败
+    IVMessageError_sendFailed       = 21001,
+    /// 消息响应超时
+    IVMessageError_timeout          = 21002,
+    /// 获取物模型失败
+    IVMessageError_GetGdmDataErr    = 21003,
+    /// 接收物模型失败
+    IVMessageError_RcvGdmDataErr    = 21004,
+    /// 透传数据给服务器失败
+    IVMessageError_SendPassSrvErr   = 21005,
+    /// 透传数据给设备失败
+    IVMessageError_SendPassDevErr   = 21006,
+    /// 没有找到回调
+    IVMessageError_NotFoundCallback = 21007,
+    /// 信令数据长度超出上限， @c `MAX_DATA_SIZE`
+    IVMessageError_ExceedsMaxLength = 21008,
+};
+
+/// iOS连接错误 [21020-21029]
+typedef NS_ENUM(IVErrCode, IVConnError) {
+    /// APP端通道连接数已达上限, 见`MAX_CONNECTION_NUM`
+    IVConnError_ExceedsMaxNumber  = 21020,
+    /// 重复的连接通道, 已存在相同`deviceId + sourceId`
+    IVConnError_Duplicate         = 21021,
+    /// 建立连接失败
+    IVConnError_ConnectFailed     = 21022,
+    /// 连接已断开/连接失败
+    IVConnError_Disconnected      = 21023,
+    /// 用户自定义数据长度超出上限 @c `MAX_PKG_BYTES`
+    IVConnError_ExceedsMaxLength  = 21024,
+    /// 当前连接暂不可用
+    IVConnError_NotAvailableNow   = 21025,
+    /// 发送用户数据失败
+    IVConnError_SendDataFailed    = 21026,
+};
+
+/// iOS播放器错误码 [21030-21049]
+typedef NS_ENUM(IVErrCode, IVPlayerError) {
+    /// 方法选择器无响应、未实现协议方法
+    IVPlayerError_NoRespondsToSelector     = 21030,
+    /// 参数错误
+    IVPlayerError_InvalidParameter         = 21031,
+    /// 录像列表为空
+    IVPlayerError_PlaybackListEmpty        = 21032,
+    /// 录像列表数据异常
+    IVPlayerError_PlaybackDataErr          = 21033,
+    /// APP正在录制音视频流
+    IVPlayerError_RecorderIsRunning        = 21034,
+    /// 视频分辨率已改变
+    IVPlayerError_VideoResolutionChanged   = 21035,
+    /// 编码器暂不可用
+    IVPlayerError_EncoderNotAvailableNow   = 21036,
+    /// 不支持的录像列表版本
+    IVPlayerError_PlaybackListVerErr       = 21037,
+    /// 设备端操作失败
+    IVPlayerError_DeviceOperationFailed    = 21038,
+    /// 录制器暂不可用
+    IVPlayerError_RecorderNotAvailableNow  = 21039,
+    /// 当前状态下不允许该操作
+    IVPlayerError_OperationNotAllowedNow   = 21040,
+    /// 音视频信息相关参数异常
+    IVPlayerError_AVInformationAbnormal    = 21041,
+};
+
+/// iOS下载错误码 [21060-21079]
+typedef NS_ENUM(IVErrCode, IVDownloadError) {
+    /// 下载器正忙，若要下载其他文件，请先暂停当前任务
+    IVDownloadError_DownloaderBusy    = 21060,
+    /// 文件读取失败，文件被删除、存储设备拔出
+    IVDownloadError_FileUnavailable   = 21061,
+    /// 断点续传offset大于文件大小fileSize
+    IVDownloadError_IncorrectOffset   = 21062,
+    /// 打开文件失败，文件权限、文件被删除、存储设备拔出
+    IVDownloadError_FileOpenFailed    = 21063,
+    /// 找不到文件，文件被删除，存储设备拔出
+    IVDownloadError_FileNotFound      = 21064,
+    /// 设备程序/模块退出、无法继续传输
+    IVDownloadError_ProcessExited     = 21065,
+    /// 接收的数据大小不等于文件总大小
+    IVDownloadError_DataSizeAbnormal  = 21070,
+    /// 设备端发生未知错误
+    IVDownloadError_DevUnknownError   = 21071,
+    /// 设备端无响应（如固件版本未支持下载，网络故障、程序故障）
+    IVDownloadError_DevNoResponse     = 21072,
+};
+
+/// iOS设备端ACK错误 [21080-21089]
+typedef NS_ENUM(IVErrCode, IVAckErr) {
+    IVAckErr_NotSupport         = 21080, //!< 设备端不支持该命令
+    IVAckErr_ParameterErr       = 21081, //!< 设备端判定参数错误
+    IVAckErr_UnknownErr         = 21082, //!< 设备端发生未知错误
+    IVAckErr_NoResponse         = 21083, //!< 设备端无响应(如固件版本未支持，网络故障、程序故障)
+    IVAckErr_DeviceBusy         = 21084, //!< 设备端正在处理指令，不接受新的指令
+};
+
+/// iOS配网错误码  [21080-21089]
+typedef NS_ENUM(IVErrCode, IVNetCfgErr) {
+    IVNetCfgErr_GetTokenErr     = 21100, // 获取Token失败
+    IVNetCfgErr_TokenExpired    = 21101, // Token已过期
+    IVNetCfgErr_DevStatusErr    = 21102, // 设备非可绑定状态
+    IVNetCfgErr_ServerErr       = 21103, // 服务器报错
 };
 
 
diff -r -u ./v1.4(200d)-Release/IoTVideo-iOS-v1.4(200d)-Release/SDK/Frameworks/IoTVideo.framework/Headers/IVFileDownloader.h ./v1.4(2070)-Debug/IoTVideo-iOS-v1.4(2070)-Debug/SDK/Frameworks/IoTVideo.framework/Headers/IVFileDownloader.h
--- ./v1.4(200d)-Release/IoTVideo-iOS-v1.4(200d)-Release/SDK/Frameworks/IoTVideo.framework/Headers/IVFileDownloader.h	2021-06-18 15:05:37.000000000 +0800
+++ ./v1.4(2070)-Debug/IoTVideo-iOS-v1.4(2070)-Debug/SDK/Frameworks/IoTVideo.framework/Headers/IVFileDownloader.h	2021-07-08 10:45:33.000000000 +0800
@@ -7,6 +7,7 @@
 //
 
 #import "IVConnection.h"
+#import "IVError.h"
 
 NS_ASSUME_NONNULL_BEGIN
 
@@ -22,27 +23,6 @@
     IVDownloaderStatusLoading       = 3,
 };
 
-/// 下载错误码 [21060-21079]
-typedef NS_ENUM(NSUInteger, IVDownloadError) {
-    /// 下载器正忙，若要下载其他文件，请先暂停当前任务
-    IVDownloadError_DownloaderBusy    = 21060,
-    /// 文件读取失败，文件被删除、存储设备拔出
-    IVDownloadError_FileUnavailable   = 21061,
-    /// 断点续传offset大于文件大小fileSize
-    IVDownloadError_IncorrectOffset   = 21062,
-    /// 打开文件失败，文件权限、文件被删除、存储设备拔出
-    IVDownloadError_FileOpenFailed    = 21063,
-    /// 找不到文件，文件被删除，存储设备拔出
-    IVDownloadError_FileNotFound      = 21064,
-    /// 设备程序/模块退出、无法继续传输
-    IVDownloadError_ProcessExited     = 21065,
-    /// 接收的数据大小不等于文件总大小
-    IVDownloadError_DataSizeAbnormal  = 21070,
-    /// 设备端发生未知错误
-    IVDownloadError_DevUnknownError   = 21071,
-    /// 设备端无响应（如固件版本未支持下载，网络故障、程序故障）
-    IVDownloadError_DevNoResponse     = 21072,
-};
 
 /// 文件下载器
 @interface IVFileDownloader : IVConnection
diff -r -u ./v1.4(200d)-Release/IoTVideo-iOS-v1.4(200d)-Release/SDK/Frameworks/IoTVideo.framework/Headers/IVLanNetConfig.h ./v1.4(2070)-Debug/IoTVideo-iOS-v1.4(2070)-Debug/SDK/Frameworks/IoTVideo.framework/Headers/IVLanNetConfig.h
--- ./v1.4(200d)-Release/IoTVideo-iOS-v1.4(200d)-Release/SDK/Frameworks/IoTVideo.framework/Headers/IVLanNetConfig.h	2021-06-18 15:05:37.000000000 +0800
+++ ./v1.4(2070)-Debug/IoTVideo-iOS-v1.4(2070)-Debug/SDK/Frameworks/IoTVideo.framework/Headers/IVLanNetConfig.h	2021-07-08 10:45:33.000000000 +0800
@@ -48,7 +48,7 @@
 ///
 /// @param name Wi-Fi名称
 /// @param pwd Wi-Fi密码
-/// @param token 配网token
+/// @param token 配网token，通过`+[IVNetConfig getToken:]`及`+[IVNetConfig getToken:callback:]`获取
 /// @param deviceId 设备id
 /// @param completionHandler 配网结果回调
 - (void)sendWifiName:(NSString *)name
@@ -72,7 +72,7 @@
 /// @param name Wi-Fi名称
 /// @param pwd Wi-Fi密码
 /// @param language 设备语言
-/// @param token 配网token
+/// @param token 配网token，通过`+[IVNetConfig getToken:]`及`+[IVNetConfig getToken:callback:]`获取
 /// @param extraInfo 额外信息
 /// @param deviceId 设备id
 /// @param completionHandler 配网结果回调
diff -r -u ./v1.4(200d)-Release/IoTVideo-iOS-v1.4(200d)-Release/SDK/Frameworks/IoTVideo.framework/Headers/IVMessageMgr.h ./v1.4(2070)-Debug/IoTVideo-iOS-v1.4(2070)-Debug/SDK/Frameworks/IoTVideo.framework/Headers/IVMessageMgr.h
--- ./v1.4(200d)-Release/IoTVideo-iOS-v1.4(200d)-Release/SDK/Frameworks/IoTVideo.framework/Headers/IVMessageMgr.h	2021-06-18 15:05:37.000000000 +0800
+++ ./v1.4(2070)-Debug/IoTVideo-iOS-v1.4(2070)-Debug/SDK/Frameworks/IoTVideo.framework/Headers/IVMessageMgr.h	2021-07-08 10:45:33.000000000 +0800
@@ -7,6 +7,7 @@
 //
 
 #import <Foundation/Foundation.h>
+#import "IVError.h"
 
 NS_ASSUME_NONNULL_BEGIN
 
@@ -20,28 +21,6 @@
 /// 多次数据响应回调     ⚠️不需要响应或结束响应后由APP开发者设置 `*finished = YES`，SDK内部就会移除响应监听！
 typedef void(^IVMsgMultiRspCallback)(NSData * _Nullable data, NSError * _Nullable error, BOOL *finished);
 
-/// 消息管理错误码 [21000-21019]
-typedef NS_ENUM(NSUInteger, IVMessageError) {
-    /// 消息重复、消息正在发送
-    IVMessageError_duplicate        = 21000,
-    /// 消息发送失败
-    IVMessageError_sendFailed       = 21001,
-    /// 消息响应超时
-    IVMessageError_timeout          = 21002,
-    /// 获取物模型失败
-    IVMessageError_GetGdmDataErr    = 21003,
-    /// 接收物模型失败
-    IVMessageError_RcvGdmDataErr    = 21004,
-    /// 透传数据给服务器失败
-    IVMessageError_SendPassSrvErr   = 21005,
-    /// 透传数据给设备失败
-    IVMessageError_SendPassDevErr   = 21006,
-    /// 没有找到回调
-    IVMessageError_NotFoundCallback = 21007,
-    /// 信令数据长度超出上限， @c `MAX_DATA_SIZE`
-    IVMessageError_ExceedsMaxLength = 21008,
-};
-
 @class IVMessageMgr;
 
 /// 消息代理协议
@@ -223,10 +202,12 @@
 /// @param deviceId 设备ID
 /// @param data 数据内容，data.length不能超过`MAX_DATA_SIZE`
 /// @param timeout 自定义超时时间，默认超时时间可使用@c `IVMsgTimeoutAuto`
+/// @param wakeupDevice 是否唤醒设备，不带此参数的方法均默认YES（即唤醒设备）
 /// @param multiRspHandler 多次回调处理, 调用方应在结束回调时设置`*finished=YES`以移除回调监听
 - (void)sendDataToDevice:(NSString *)deviceId
                     data:(NSData *)data
                  timeout:(NSTimeInterval)timeout
+            wakeupDevice:(BOOL)wakeupDevice
          multiRspHandler:(nullable IVMsgMultiRspCallback)multiRspHandler;
 
 /// 信令数据透传给设备（自定义回传方式）
@@ -236,11 +217,13 @@
 /// @param deviceId 设备ID
 /// @param data 数据内容，data.length不能超过`MAX_DATA_SIZE`
 /// @param timeout 自定义超时时间，默认超时时间可使用@c `IVMsgTimeoutAuto`
+/// @param wakeupDevice 是否唤醒设备，不带此参数的方法均默认YES（即唤醒设备）
 /// @param expectResponse 【YES】预期有数据回传 ；【NO】忽略数据回传
 /// @param completionHandler 完成回调
 - (void)sendDataToDevice:(NSString *)deviceId
                     data:(NSData *)data
                  timeout:(NSTimeInterval)timeout
+            wakeupDevice:(BOOL)wakeupDevice
           expectResponse:(BOOL)expectResponse
        completionHandler:(nullable IVMsgDataCallback)completionHandler;
 
diff -r -u ./v1.4(200d)-Release/IoTVideo-iOS-v1.4(200d)-Release/SDK/Frameworks/IoTVideo.framework/Headers/IVNetConfig.h ./v1.4(2070)-Debug/IoTVideo-iOS-v1.4(2070)-Debug/SDK/Frameworks/IoTVideo.framework/Headers/IVNetConfig.h
--- ./v1.4(200d)-Release/IoTVideo-iOS-v1.4(200d)-Release/SDK/Frameworks/IoTVideo.framework/Headers/IVNetConfig.h	2021-06-18 15:05:37.000000000 +0800
+++ ./v1.4(2070)-Debug/IoTVideo-iOS-v1.4(2070)-Debug/SDK/Frameworks/IoTVideo.framework/Headers/IVNetConfig.h	2021-07-08 10:45:33.000000000 +0800
@@ -8,41 +8,23 @@
 
 #import <Foundation/Foundation.h>
 #import "IVConstant.h"
-
-@class IVLanNetConfig, IVQRCodeNetConfig;
+#import "IVError.h"
 
 NS_ASSUME_NONNULL_BEGIN
 
 typedef IVLanguageCode IVNetConfigLanguage;
 
-/// 设备上线通知完整模型
-@interface IVDeviceOnline : NSObject
-/// device id
-@property (nonatomic, copy) NSString *deviceID;
-/// errorCode
-/// @code
-/// | errorCode | 解释
-/// | --------- | -----------------------------------
-/// | -1        | 配网token已经过期（5分钟）
-/// | 0         | 成功
-/// | 8022      | 设备和用户已经绑定
-/// | 8023      | 设备已经绑定其他用户
-/// | 8024      | 设备的客户ID与用户的客户ID不一致
-/// | 8027      | 设备上传的token校验失败
-/// | 8028      | 设备上传的json解析失败
-@property (nonatomic, assign) NSInteger errorCode;
-/// 时间戳
-@property (nonatomic, assign) NSTimeInterval time;
-/// 配网token
-@property (nonatomic, copy) NSString *token;
-/// 设备uuid
-@property (nonatomic, copy) NSString *uuid;
-/// 预留
-@property (nonatomic, copy) NSString *reserve;
-@end
+/// 获取配网Token回调
+typedef void(^IVNetCfgTokenCallback)(NSString * _Nullable token, NSError * _Nullable error);
+
+/// 查询配网结果回调/设备上线信息
+/// deviceId: 设备id
+/// error:  【nil】配网成功；【非nil】配网失败，@c `IVNetCfgErr`
+typedef void(^IVDeviceOnlineCallback)(NSString * _Nullable deviceId, NSError * _Nullable error);
+
+@class IVLanNetConfig, IVQRCodeNetConfig;
+
 
-typedef void(^IVDeviceOnlineCallback)(NSString * _Nullable deviceId, NSError *error);
-typedef void(^IVDeviceOnlineFullCallback)(IVDeviceOnline *deviceOnline);
 /// 配网管理
 @interface IVNetConfig : NSObject
 
@@ -53,46 +35,34 @@
 @property(class, nonatomic, strong, readonly) IVQRCodeNetConfig *QRCode;
 
 
-///// 局域网配网
-//+ (IVLanNetConfig *)lan;
-//
-///// 二维码配网
-//+ (IVQRCodeNetConfig *)QRCode;
-
-/// 配网结果回调/设备上线信息
-///
-/// deviceId: 设备id
-///
-/// errorCode: 错误码
-/// @code
-/// | errorCode | 解释
-/// | --------- | -----------------------------------
-/// | -1        | 配网token已经过期（5分钟）
-/// | 0         | 成功
-/// | 8022      | 设备和用户已经绑定
-/// | 8023      | 设备已经绑定其他用户
-/// | 8024      | 设备的客户ID与用户的客户ID不一致
-/// | 8027      | 设备上传的token校验失败
-/// | 8028      | 设备上传的json解析失败
-/// @endcode
-+ (void)registerDeviceOnlineCallback:(IVDeviceOnlineCallback)onlineCallback;
-
-/// 完整的配网结果回调/设备上线信息
-+ (void)registerDeviceOnlineFullCallback:(IVDeviceOnlineFullCallback)onlineCallback;
+/// 监听配网结果回调
+/// @param completionHandler 结果回调
++ (void)observeNetCfgResult:(IVDeviceOnlineCallback)completionHandler;
 
-/// 销毁监听block
-+ (void)unregisterDeviceOnline;
+/// 移除配网监听
++ (void)removeObserver;
 
 /// 获取二维码/AP 配网所需要的配网 Token
+/// Token过期时间默认300秒
 /// @param completionHandler 回调
-+ (void)getToken:(void(^)(NSString * _Nullable token, NSError * _Nullable error))completionHandler;
-                    
-/**
- * 通过web绑定成功后，快速订阅设备
- *  @param token 订阅的设备访问token
- *  @param deviceId 设备ID
- *  @return 是否成功
- */
++ (void)getToken:(IVNetCfgTokenCallback)completionHandler;
+   
+/// 获取二维码/AP 配网所需要的配网 Token, 自定义token过期时间
+/// Token过期时间默认300秒
+/// @param deviceId 设备ID [可选]
+/// @param completionHandler 结果回调
++ (void)getToken:(nullable NSString *)deviceId callback:(IVNetCfgTokenCallback)completionHandler;
+
+/// 获取二维码/AP 配网所需要的配网 Token, 自定义token过期时间
+/// @param deviceId 设备ID [可选]
+/// @param expireTime 设定token过期时间(秒，默认300)，范围[1,3600]
+/// @param completionHandler 结果回调
++ (void)getToken:(nullable NSString *)deviceId expireTime:(NSUInteger)expireTime callback:(IVNetCfgTokenCallback)completionHandler;
+
+/// 通过web绑定成功后，快速订阅设备
+/// @param token 订阅的设备访问token
+/// @param deviceId 设备ID
+/// @return 是否成功
 + (BOOL)subscribeDeviceWithToken:(NSString *)token deviceId:(NSString *)deviceId;
 
 @end
diff -r -u ./v1.4(200d)-Release/IoTVideo-iOS-v1.4(200d)-Release/SDK/Frameworks/IoTVideo.framework/Headers/IVNetwork_p2p.h ./v1.4(2070)-Debug/IoTVideo-iOS-v1.4(2070)-Debug/SDK/Frameworks/IoTVideo.framework/Headers/IVNetwork_p2p.h
--- ./v1.4(200d)-Release/IoTVideo-iOS-v1.4(200d)-Release/SDK/Frameworks/IoTVideo.framework/Headers/IVNetwork_p2p.h	2021-06-18 15:05:37.000000000 +0800
+++ ./v1.4(2070)-Debug/IoTVideo-iOS-v1.4(2070)-Debug/SDK/Frameworks/IoTVideo.framework/Headers/IVNetwork_p2p.h	2021-07-08 10:45:33.000000000 +0800
@@ -17,16 +17,26 @@
 
 /// 消息管理单例
 @property (class, nonatomic, strong, readonly) IVNetwork_p2p *sharedInstance;
+/// 回调线程 默认主线程
+@property (nonatomic, strong, nullable) dispatch_queue_t responseQueue;
 
 + (instancetype)sharedInstance;
 
 /// p2p专用网络请求
-/// param methodType 请求方式: “GET”、“POST”、“PUT”
-/// param urlString 请求地址
-/// param params 请求参数
-/// param response 结果回调
+/// @param methodType 请求方式: “GET”、“POST”、“PUT”
+/// @param urlString 请求地址
+/// @param params 请求参数
+/// @param response 回调
 - (void)requestWithMethodType:(NSString * _Nonnull)methodType urlString:(NSString * _Nullable)urlString params:(NSDictionary<NSString *, id> * _Nullable)params response:(void (^ _Nullable)(NSString * _Nullable, NSError * _Nullable))response;
 
+/// p2p专用网络请求
+/// @param methodType 请求方式: “GET”、“POST”、“PUT”
+/// @param urlString 请求地址
+/// @param params 请求参数
+/// @param queue 回调线程 不传则默认在全局 global 线程回调
+/// @param response 回调
+- (void)requestWithMethodType:(NSString * _Nonnull)methodType urlString:(NSString * _Nullable)urlString params:(NSDictionary<NSString *, id> * _Nullable)params queue:(dispatch_queue_t _Nullable)queue response:(void (^ _Nullable)(NSString * _Nullable, NSError * _Nullable))response;
+
 @end
 
 NS_ASSUME_NONNULL_END
diff -r -u ./v1.4(200d)-Release/IoTVideo-iOS-v1.4(200d)-Release/SDK/Frameworks/IoTVideo.framework/Headers/IVPlaybackPlayer.h ./v1.4(2070)-Debug/IoTVideo-iOS-v1.4(2070)-Debug/SDK/Frameworks/IoTVideo.framework/Headers/IVPlaybackPlayer.h
--- ./v1.4(200d)-Release/IoTVideo-iOS-v1.4(200d)-Release/SDK/Frameworks/IoTVideo.framework/Headers/IVPlaybackPlayer.h	2021-06-18 15:05:37.000000000 +0800
+++ ./v1.4(2070)-Debug/IoTVideo-iOS-v1.4(2070)-Debug/SDK/Frameworks/IoTVideo.framework/Headers/IVPlaybackPlayer.h	2021-07-08 10:45:33.000000000 +0800
@@ -47,7 +47,7 @@
 
 /// 回放文件获取回调
 typedef void (^PlaybackListCallback)(IVPlaybackPage<IVPlaybackItem *> *_Nullable page, NSError *_Nullable error);
-/// 回放日期获取回调，0点，用UTC+0表示
+/// 回放日期获取回调（日期为当天0点），用UTC+0表示
 typedef void (^PlaybackDateCallback)(IVPlaybackPage<NSNumber *> *_Nullable page, NSError *_Nullable error);
 
 /// 回放播放器
@@ -77,20 +77,22 @@
 
 /// 获取一页回放文件列表
 /// @param deviceId 设备ID
-/// @param pageIndex 页码索引，获取指定页码的回放文件（ pageIndex从0开始递增）
+/// @param pageIndex 页码索引，获取指定页码的回放文件（ pageIndex从0开始），在未知总页数情况下传0
 /// @param countPerPage 在[startTime, endTime]时间范围内按每页`countPerPage`个文件查询，每次返回一页的数据，该值由APP设置，取值范围[1, 3200]
 /// @param startTime 开始时间戳（秒），用UTC+0表示
 /// @param endTime 结束时间戳（秒），用UTC+0表示
-/// @param filterType 过滤文件类型, nil为不过滤
+/// @param filterType 筛选指定类型文件, nil为不筛选
+/// @param ascendingOrder 是否按时间递增顺序(即从startTime到endTime方向)获取文件
 /// @param completionHandler 结果回调
 /// @note ⚠️请根据实际情况合理设置查询时间范围和分页，`时间跨度太长`或`每页数量过大`会增加设备查询时间， 建议[startTime, endTime]区间不超过24小时 或 countPerPage不超过1440个文件.
-+ (void)getPlaybackListV2OfDevice:(NSString *)deviceId
-                        pageIndex:(uint32_t)pageIndex
-                     countPerPage:(uint32_t)countPerPage
-                        startTime:(NSTimeInterval)startTime
-                          endTime:(NSTimeInterval)endTime
-                       filterType:(nullable NSString *)filterType
-                completionHandler:(PlaybackListCallback)completionHandler;
++ (void)getPlaybackListOfDevice:(NSString *)deviceId
+                      pageIndex:(uint32_t)pageIndex
+                   countPerPage:(uint32_t)countPerPage
+                      startTime:(NSTimeInterval)startTime
+                        endTime:(NSTimeInterval)endTime
+                     filterType:(nullable NSString *)filterType
+                 ascendingOrder:(BOOL)ascendingOrder
+              completionHandler:(PlaybackListCallback)completionHandler;
 
 /// 获取有回放文件的日期列表
 /// @param deviceId 设备ID
@@ -152,7 +154,25 @@
 
 @interface IVPlaybackPlayer (Deprecated)
 
-/// 获取一页回放文件列表
+/// 获取一页回放文件列表（已过期）
+/// @param deviceId 设备ID
+/// @param pageIndex 页码索引，获取指定页码的回放文件（ pageIndex从0开始递增）
+/// @param countPerPage 在[startTime, endTime]时间范围内按每页`countPerPage`个文件查询，每次返回一页的数据，该值由APP设置，取值范围[1, 3200]
+/// @param startTime 开始时间戳（秒），用UTC+0表示
+/// @param endTime 结束时间戳（秒），用UTC+0表示
+/// @param filterType 过滤文件类型, nil为不过滤
+/// @param completionHandler 结果回调
+/// @note ⚠️请根据实际情况合理设置查询时间范围和分页，`时间跨度太长`或`每页数量过大`会增加设备查询时间， 建议[startTime, endTime]区间不超过24小时 或 countPerPage不超过1440个文件.
+/// @deprecated Use `-getPlaybackListOfDevice:pageIndex:countPerPage:startTime:endTime:filterType:ascendingOrder:completionHandler:` instead.
++ (void)getPlaybackListV2OfDevice:(NSString *)deviceId
+                        pageIndex:(uint32_t)pageIndex
+                     countPerPage:(uint32_t)countPerPage
+                        startTime:(NSTimeInterval)startTime
+                          endTime:(NSTimeInterval)endTime
+                       filterType:(nullable NSString *)filterType
+                completionHandler:(PlaybackListCallback)completionHandler API_DEPRECATED("Use -getPlaybackListOfDevice:pageIndex:countPerPage:startTime:endTime:filterType:ascendingOrder:completionHandler: instead", ios(2.0,9.0));
+
+/// 获取一页回放文件列表（已过期）
 /// @param deviceId 设备ID
 /// @param pageIndex 页码索引，获取指定页码的回放文件（ pageIndex从0开始递增）
 /// @param countPerPage 在[startTime, endTime]时间范围内按每页`countPerPage`个文件查询，每次返回一页的数据，该值由APP设置，取值范围[1, 900]
@@ -160,13 +180,13 @@
 /// @param endTime 结束时间戳（秒）
 /// @param completionHandler 结果回调
 /// @note ⚠️请根据实际情况合理设置查询时间范围和分页，`时间跨度太长`或`每页数量过大`会增加设备查询时间， 建议[startTime, endTime]区间不超过12小时 或 countPerPage不超过720个文件.
-/// @deprecated Use `-getPlaybackListV2OfDevice:pageIndex:countPerPage:startTime:endTime:completionHandler:` instead.
+/// @deprecated Use `-getPlaybackListOfDevice:pageIndex:countPerPage:startTime:endTime:filterType:ascendingOrder:completionHandler:` instead.
 + (void)getPlaybackListOfDevice:(NSString *)deviceId
                       pageIndex:(uint32_t)pageIndex
                    countPerPage:(uint32_t)countPerPage
                       startTime:(NSTimeInterval)startTime
                         endTime:(NSTimeInterval)endTime
-              completionHandler:(PlaybackListCallback)completionHandler API_DEPRECATED("Use -getPlaybackListV2OfDevice:pageIndex:countPerPage:startTime:endTime:filterType:completionHandler: instead", ios(2.0,9.0));
+              completionHandler:(PlaybackListCallback)completionHandler API_DEPRECATED("Use -getPlaybackListOfDevice:pageIndex:countPerPage:startTime:endTime:filterType:ascendingOrder:completionHandler: instead", ios(2.0,9.0));
 
 @end
 
diff -r -u ./v1.4(200d)-Release/IoTVideo-iOS-v1.4(200d)-Release/SDK/Frameworks/IoTVideo.framework/Headers/IVPlayer.h ./v1.4(2070)-Debug/IoTVideo-iOS-v1.4(2070)-Debug/SDK/Frameworks/IoTVideo.framework/Headers/IVPlayer.h
--- ./v1.4(200d)-Release/IoTVideo-iOS-v1.4(200d)-Release/SDK/Frameworks/IoTVideo.framework/Headers/IVPlayer.h	2021-06-18 15:05:37.000000000 +0800
+++ ./v1.4(2070)-Debug/IoTVideo-iOS-v1.4(2070)-Debug/SDK/Frameworks/IoTVideo.framework/Headers/IVPlayer.h	2021-07-08 10:45:33.000000000 +0800
@@ -59,20 +59,14 @@
 
 /// SD卡回放文件播放结束
 /// @param player 播放器实例
-/// @param fileTime 即将播放的文件（文件开始时间）
+/// @param fileTime 播放结束的文件（文件开始时间）
 /// @param error  nil：正常完成， 非nil：播放错误
 - (void)player:(IVPlayer *)player didEndOfFile:(NSTimeInterval)fileTime error:(nullable NSError *)error;
 
-/// SD卡回放文件播放结束
-/// @param player 播放器实例
-/// @param startTime 当前播放结束的文件的开始时间
-/// @deprecated Use `-player:didEndOfFile:error:` instead
-- (void)player:(IVPlayer *)player didFinishPlaybackFile:(NSTimeInterval)startTime API_DEPRECATED("Use -player:didEndOfFile:error: instead", ios(2.0,9.0));
-
-/// 观众人数变更
+/// 观看人数变更
 /// @param player 播放器实例
-/// @param audience 观众人数
-- (void)player:(IVPlayer *)player didUpdateAudience:(NSInteger)audience;
+/// @param viewerNum 观看人数
+- (void)player:(IVPlayer *)player didUpdateViewerNum:(NSInteger)viewerNum ;
 
 /// 对讲人数变更
 /// @param player 播放器实例
@@ -89,6 +83,19 @@
 /// @param avHeader 音视频头信息
 - (void)player:(IVPlayer *)player didReceiveAVHeader:(IVAVHeader)avHeader;
 
+#pragma mark - Deprecated
+
+/// SD卡回放文件播放结束（已过期）
+/// @param player 播放器实例
+/// @param startTime 当前播放结束的文件的开始时间
+/// @deprecated Use `-player:didEndOfFile:error:` instead
+- (void)player:(IVPlayer *)player didFinishPlaybackFile:(NSTimeInterval)startTime API_DEPRECATED("Use -player:didEndOfFile:error:", ios(2.0,9.0));
+
+/// 观众人数变更（已过期）
+/// @param player 播放器实例
+/// @param audience 观众人数
+/// @deprecated Use `-player:didUpdateViewerNum:` instead
+- (void)player:(IVPlayer *)player didUpdateAudience:(NSInteger)audience API_DEPRECATED("Use -player:didUpdateViewerNum: instead", ios(2.0,9.0));
 @end
 
 #pragma mark - 对讲协议
@@ -230,6 +237,12 @@
 /// @param completionHandler 完成回调
 - (void)startRecording:(NSString *)savePath completionHandler:(void(^)(NSString * _Nullable savePath, NSError * _Nullable error))completionHandler;
 
+/// 开始录像, 带时长回调
+/// @param savePath 录像文件路径
+/// @param durationCallback 时长回调
+/// @param completionHandler 完成回调
+- (void)startRecording:(NSString *)savePath durationCallback:(void(^)(NSTimeInterval duration))durationCallback completionHandler:(void(^)(NSString * _Nullable savePath, NSError * _Nullable error))completionHandler;
+
 /// 停止录像
 - (void)stopRecording;
 
@@ -240,6 +253,13 @@
 /// @return 发送是否成功
 - (BOOL)sendData:(NSData *)data;
 
+/// 发送自定义数据
+/// @param data 要发送的数据，data.length不能超过`MAX_PKG_BYTES`
+/// @param sequence 是否串行发送
+/// @param callback 完成回调。callback非nil则通过callback回调；callback为nil则通过代理回调；
+- (BOOL)sendData:(nullable NSData *)data sequence:(BOOL)sequence multiCallback:(nullable IVMsgMultiRspCallback)callback;
+
+
 #pragma mark - 解码器/渲染器/录制器
 
 /// 音频解码器, 默认为 `IVAudioDecoder`
@@ -260,7 +280,26 @@
 
 #pragma mark - DEBUG
 
-// 播放器调试模式，默认`NO`。若设为`YES`则在编/解码时将音视频数据写入Document根目录，⚠️开启可能会导致卡顿。
+/// 播放器调试模式，默认`NO`。若设为`YES`则在编/解码时将音视频数据写入Document根目录。说明文档: Docs/抓取音视频流方法.md
+/// @note ⚠️开启可能会导致卡顿。
+/// @code
+///  播放相关音频文件:
+///  au_rcv_in   音频 接收器 输入流
+///  au_dec_in   音频 解码器 输入流
+///  au_dec_out  音频 解码器 输出流
+///
+///  播放相关视频文件:
+///  vi_rcv_in   视频 接收器 输入流
+///  vi_dec_in   视频 解码器 输入流
+///
+///  对讲相关音频文件:
+///  au_fill_in  音频 采集器 输出流
+///  au_enc_in   音频 编码器 输入流
+///  au_enc_out  音频 编码器 输出流
+///
+///  双向视频通话相关文件:
+///  vi_enc_out  视频 编码器 输出流
+/// @endcode
 @property (class, nonatomic, assign, readwrite) BOOL debugMode;
 
 @end
diff -r -u ./v1.4(200d)-Release/IoTVideo-iOS-v1.4(200d)-Release/SDK/Frameworks/IoTVideo.framework/Headers/IVQRCodeNetConfig.h ./v1.4(2070)-Debug/IoTVideo-iOS-v1.4(2070)-Debug/SDK/Frameworks/IoTVideo.framework/Headers/IVQRCodeNetConfig.h
--- ./v1.4(200d)-Release/IoTVideo-iOS-v1.4(200d)-Release/SDK/Frameworks/IoTVideo.framework/Headers/IVQRCodeNetConfig.h	2021-06-18 15:05:37.000000000 +0800
+++ ./v1.4(2070)-Debug/IoTVideo-iOS-v1.4(2070)-Debug/SDK/Frameworks/IoTVideo.framework/Headers/IVQRCodeNetConfig.h	2021-07-08 10:45:33.000000000 +0800
@@ -69,7 +69,7 @@
 /// @param name wifi SSID
 /// @param pwd wifi密码
 /// @param language 设备语言
-/// @param token 配网Token
+/// @param token 配网Token，通过`+[IVNetConfig getToken:]`及`+[IVNetConfig getToken:callback:]`获取
 /// @param extraInfo 额外自定义扩展信息
 /// @param size 二维码大小
 /// @return 二维码图片
@@ -96,7 +96,7 @@
 /// @param pwd wifi密码
 /// @param reserve 平台保留 厂商请使用上面的接口，或传nil
 /// @param language 设备语言
-/// @param token 配网Token
+/// @param token 配网Token，通过`+[IVNetConfig getToken:]`及`+[IVNetConfig getToken:callback:]`获取
 /// @param extraInfo 额外自定义扩展信息
 /// @param size 二维码大小
 /// @return 二维码图片
diff -r -u ./v1.4(200d)-Release/IoTVideo-iOS-v1.4(200d)-Release/SDK/Frameworks/IoTVideo.framework/Headers/IVUtils.h ./v1.4(2070)-Debug/IoTVideo-iOS-v1.4(2070)-Debug/SDK/Frameworks/IoTVideo.framework/Headers/IVUtils.h
--- ./v1.4(200d)-Release/IoTVideo-iOS-v1.4(200d)-Release/SDK/Frameworks/IoTVideo.framework/Headers/IVUtils.h	2021-06-18 15:05:37.000000000 +0800
+++ ./v1.4(2070)-Debug/IoTVideo-iOS-v1.4(2070)-Debug/SDK/Frameworks/IoTVideo.framework/Headers/IVUtils.h	2021-07-08 10:45:33.000000000 +0800
@@ -11,6 +11,22 @@
 
 #import <Foundation/Foundation.h>
 
+/// uint8_t *转十六进制NSString
+///
+/// 仅转换前100个字节，超过部分省略，形如 {length=195, bytes=0x00000000 00000000 00000000...}
+/// @param bytes 要转换的bytes
+/// @param len bytes长度
+/// @return bytes的十六进制字符串
+extern NSString *convertBytesToHexStr(const uint8_t *bytes, uint32_t len);
+
+/// uint8_t *转十六进制NSString
+///
+/// 仅转换前maxLen个字节，超过部分省略，形如 {length=195, bytes=0x00000000 00000000 00000000...}
+/// @param bytes 要转换的bytes
+/// @param len bytes长度
+/// @return bytes的十六进制字符串
+extern NSString *convertBytesToHexStr2(const uint8_t *bytes, uint32_t len, uint32_t maxLen);
+
 /// NSData转十六进制NSString
 ///
 /// 仅转换前100个字节，超过部分省略，形如 {length=195, bytes=0x00000000 00000000 00000000...}
@@ -24,7 +40,7 @@
 /// 仅转换前maxLen个字节，超过部分省略，形如 {length=195, bytes=0x00000000 00000000 00000000...}
 /// @param data 要转换的data
 /// @return data的十六进制字符串
-NSString *convertDataToHexStr2(NSData *data, uint32_t maxLen);
+extern NSString *convertDataToHexStr2(NSData *data, uint32_t maxLen);
 
 /// 计算任意时间当天开始时间
 ///
diff -r -u ./v1.4(200d)-Release/IoTVideo-iOS-v1.4(200d)-Release/SDK/Frameworks/IoTVideo.framework/Headers/IoTVideo.h ./v1.4(2070)-Debug/IoTVideo-iOS-v1.4(2070)-Debug/SDK/Frameworks/IoTVideo.framework/Headers/IoTVideo.h
--- ./v1.4(200d)-Release/IoTVideo-iOS-v1.4(200d)-Release/SDK/Frameworks/IoTVideo.framework/Headers/IoTVideo.h	2021-06-18 15:05:37.000000000 +0800
+++ ./v1.4(2070)-Debug/IoTVideo-iOS-v1.4(2070)-Debug/SDK/Frameworks/IoTVideo.framework/Headers/IoTVideo.h	2021-07-08 10:45:33.000000000 +0800
@@ -35,8 +35,8 @@
 
 
 /* ⚠️Automatically generated by script, do not manually edit! */
-#define kIoTVideoVersion "1.4(200d) Release" /* Commit:f982911 */
-#define kIoTVideoCompileDate "2021-06-18 14:52:55"
+#define kIoTVideoVersion "1.4(2070) Debug" /* Commit:1f1d31f */
+#define kIoTVideoCompileDate "2021-07-08 10:45:01"
 
 
 
@@ -58,7 +58,7 @@
 
 @optional
 
-/// 日志输出回调
+/// 日志输出回调（已过期）
 /// @param message  日志信息
 /// @param level  日志级别, 详见IVLogLevel
 /// @param file  文件名
Binary files ./v1.4(200d)-Release/IoTVideo-iOS-v1.4(200d)-Release/SDK/Frameworks/IoTVideo.framework/Info.plist and ./v1.4(2070)-Debug/IoTVideo-iOS-v1.4(2070)-Debug/SDK/Frameworks/IoTVideo.framework/Info.plist differ
Binary files ./v1.4(200d)-Release/IoTVideo-iOS-v1.4(200d)-Release/SDK/Frameworks/IoTVideo.framework/IoTVideo and ./v1.4(2070)-Debug/IoTVideo-iOS-v1.4(2070)-Debug/SDK/Frameworks/IoTVideo.framework/IoTVideo differ
Only in ./v1.4(200d)-Release/IoTVideo-iOS-v1.4(200d)-Release/SDK/Frameworks: x86.7z
