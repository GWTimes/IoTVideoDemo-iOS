Only in ./v1.4(2070)-Debug/IoTVideo-iOS-v1.4(2070)-Debug/Demo/IotVideoDemo/IVDevTools: .DS_Store
diff -r -u ./v1.4(200d)-Release/IoTVideo-iOS-v1.4(200d)-Release/Demo/IotVideoDemo/IVDevTools/IVDevTools.xcodeproj/xcuserdata/jonor.xcuserdatad/xcschemes/xcschememanagement.plist ./v1.4(2070)-Debug/IoTVideo-iOS-v1.4(2070)-Debug/Demo/IotVideoDemo/IVDevTools/IVDevTools.xcodeproj/xcuserdata/jonor.xcuserdatad/xcschemes/xcschememanagement.plist
--- ./v1.4(200d)-Release/IoTVideo-iOS-v1.4(200d)-Release/Demo/IotVideoDemo/IVDevTools/IVDevTools.xcodeproj/xcuserdata/jonor.xcuserdatad/xcschemes/xcschememanagement.plist	2021-06-18 15:05:39.000000000 +0800
+++ ./v1.4(2070)-Debug/IoTVideo-iOS-v1.4(2070)-Debug/Demo/IotVideoDemo/IVDevTools/IVDevTools.xcodeproj/xcuserdata/jonor.xcuserdatad/xcschemes/xcschememanagement.plist	2021-07-08 10:45:35.000000000 +0800
@@ -9,14 +9,14 @@
 			<key>isShown</key>
 			<false/>
 			<key>orderHint</key>
-			<integer>1</integer>
+			<integer>0</integer>
 		</dict>
 		<key>Resource.xcscheme_^#shared#^_</key>
 		<dict>
 			<key>isShown</key>
 			<false/>
 			<key>orderHint</key>
-			<integer>3</integer>
+			<integer>1</integer>
 		</dict>
 	</dict>
 </dict>
Only in ./v1.4(2070)-Debug/IoTVideo-iOS-v1.4(2070)-Debug/Demo/IotVideoDemo/IotVideoDemo: .DS_Store
diff -r -u ./v1.4(200d)-Release/IoTVideo-iOS-v1.4(200d)-Release/Demo/IotVideoDemo/IotVideoDemo/Device/IVAPAddDeviceSendInfoVC.swift ./v1.4(2070)-Debug/IoTVideo-iOS-v1.4(2070)-Debug/Demo/IotVideoDemo/IotVideoDemo/Device/IVAPAddDeviceSendInfoVC.swift
--- ./v1.4(200d)-Release/IoTVideo-iOS-v1.4(200d)-Release/Demo/IotVideoDemo/IotVideoDemo/Device/IVAPAddDeviceSendInfoVC.swift	2021-06-18 15:05:37.000000000 +0800
+++ ./v1.4(2070)-Debug/IoTVideo-iOS-v1.4(2070)-Debug/Demo/IotVideoDemo/IotVideoDemo/Device/IVAPAddDeviceSendInfoVC.swift	2021-07-08 10:45:33.000000000 +0800
@@ -50,6 +50,11 @@
         NotificationCenter.default.addObserver(self, selector: #selector(waitForAPConnection), name: UIApplication.didBecomeActiveNotification, object: nil)
     }
     
+    override func viewDidDisappear(_ animated: Bool) {
+        super.viewDidDisappear(animated)
+        IVNetConfig.removeObserver()
+    }
+    
     @objc func waitForAPConnection() {
         let hud = ivLoadingHud("等待连接AP", isMask: true)
         IVDelayWork.async(wait: { [weak self](canceled: inout Bool) -> Bool in
@@ -113,11 +118,13 @@
         
     func registerDeviceNetConfig() {
         self.hud = ivLoadingHud("等待设备上线", isMask: true)
-        IVNetConfig.registerDeviceOnlineCallback { [weak self](devId, error) in
+        IVNetConfig.observeNetCfgResult { [weak self](devId, error) in
             guard let `self` = self else { return }
-            let err: NSError = error as NSError
+            
             self.hud?.hide()
-            if err.code == 0 || err.code == 8023 {
+            if let err = error as NSError? {
+                showError(err)
+            } else {
                 let hud = ivLoadingHud("正在绑定设备", isMask: true)
                 IVDemoNetwork.addDevice(devId!, responseHandler: { [weak self](data, error) in
                     hud.hide()
@@ -130,8 +137,6 @@
                         }
                     })]).show()
                 })
-            } else {
-                showError(error)
             }
         }
     }
diff -r -u ./v1.4(200d)-Release/IoTVideo-iOS-v1.4(200d)-Release/Demo/IotVideoDemo/IotVideoDemo/Device/IVAPAddDeviceVC.swift ./v1.4(2070)-Debug/IoTVideo-iOS-v1.4(2070)-Debug/Demo/IotVideoDemo/IotVideoDemo/Device/IVAPAddDeviceVC.swift
--- ./v1.4(200d)-Release/IoTVideo-iOS-v1.4(200d)-Release/Demo/IotVideoDemo/IotVideoDemo/Device/IVAPAddDeviceVC.swift	2021-06-18 15:05:37.000000000 +0800
+++ ./v1.4(2070)-Debug/IoTVideo-iOS-v1.4(2070)-Debug/Demo/IotVideoDemo/IotVideoDemo/Device/IVAPAddDeviceVC.swift	2021-07-08 10:45:33.000000000 +0800
@@ -51,15 +51,15 @@
     
     func getNetConfigToken() {
         let hud = ivLoadingHud("正在获取token")
-        IVNetConfig.getToken { (token, error) in
+        IVNetConfig.getToken { [weak self](token, error) in
             logDebug(token ?? "", error ?? "")
             hud.hide()
             guard let token = token else {
                 showError(error!)
                 return
             }
-            self.netToken = token
-            self.tokenLabel.text = token
+            self?.netToken = token
+            self?.tokenLabel.text = token
         }
     }
     
diff -r -u ./v1.4(200d)-Release/IoTVideo-iOS-v1.4(200d)-Release/Demo/IotVideoDemo/IotVideoDemo/Device/IVQRCodeAddDevice.swift ./v1.4(2070)-Debug/IoTVideo-iOS-v1.4(2070)-Debug/Demo/IotVideoDemo/IotVideoDemo/Device/IVQRCodeAddDevice.swift
--- ./v1.4(200d)-Release/IoTVideo-iOS-v1.4(200d)-Release/Demo/IotVideoDemo/IotVideoDemo/Device/IVQRCodeAddDevice.swift	2021-06-18 15:05:37.000000000 +0800
+++ ./v1.4(2070)-Debug/IoTVideo-iOS-v1.4(2070)-Debug/Demo/IotVideoDemo/IotVideoDemo/Device/IVQRCodeAddDevice.swift	2021-07-08 10:45:33.000000000 +0800
@@ -30,10 +30,11 @@
         super.viewDidLoad()
          NotificationCenter.default.addObserver(self, selector: #selector(getWifiSSIDInfo), name: UIApplication.didBecomeActiveNotification, object: nil)
         getWifiSSIDInfo()
-    
-        IVNetConfig.registerDeviceOnlineCallback { (devId, error) in
-            let err: NSError = error as NSError
-            if err.code == 0 || err.code == 8023 {
+        
+        IVNetConfig.observeNetCfgResult { (devId, error) in
+            if let err = error as NSError? {
+                showError(err)
+            } else {
                 let hud = ivLoadingHud()
                 
                 IVDemoNetwork.addDevice(devId!, responseHandler: { (data, error) in
@@ -47,35 +48,14 @@
                         }
                     })]).show()
                 })
-            } else {
-                showError(error)
             }
         }
-        // 监听设备配网结果
-//        NotificationCenter.default.addObserver(forName: .iVMessageDidReceiveEvent, object: nil, queue: nil) { (noti) in
-//
-//            guard let eventModel = noti.userInfo?[IVNotiBody] as? IVReceiveEvent else { return }
-//
-//            guard eventModel.topic == "EVENT_SYS/NetCfg_OK",
-//                let devId = JSON(parseJSON: eventModel.event)["data"]["devid"].string else { return }
-//
-//            let hud = ivLoadingHud()
-//
-//            IVDemoNetwork.addDevice(devId, responseHandler: { (data, error) in
-//                hud.hide()
-//                guard let succ = data as? Bool, error == nil else { return }
-//
-//                IVPopupView(title: "添加结果", message: succ ? "成功" : "失败", input: nil, actions: [.iKnow({ (_) in
-//                    if succ {
-//                        self.navigationController?.popToRootViewController(animated: true)
-//                        IVNotiPost(.deviceListChange(by: .add))
-//                    }
-//                })]).show()
-//            })
-//        }
-        
     }
     
+    override func viewDidDisappear(_ animated: Bool) {
+        super.viewDidDisappear(animated)
+        IVNetConfig.removeObserver()
+    }
     
     @objc func getWifiSSIDInfo() {
         if #available(iOS 13.0, *) {
Only in ./v1.4(2070)-Debug/IoTVideo-iOS-v1.4(2070)-Debug/Demo/IotVideoDemo/IotVideoDemo/Frameworks: .DS_Store
diff -r -u ./v1.4(200d)-Release/IoTVideo-iOS-v1.4(200d)-Release/Demo/IotVideoDemo/IotVideoDemo/Media/IVDevicePlayerViewController.swift ./v1.4(2070)-Debug/IoTVideo-iOS-v1.4(2070)-Debug/Demo/IotVideoDemo/IotVideoDemo/Media/IVDevicePlayerViewController.swift
--- ./v1.4(200d)-Release/IoTVideo-iOS-v1.4(200d)-Release/Demo/IotVideoDemo/IotVideoDemo/Media/IVDevicePlayerViewController.swift	2021-06-18 15:05:39.000000000 +0800
+++ ./v1.4(2070)-Debug/IoTVideo-iOS-v1.4(2070)-Debug/Demo/IotVideoDemo/IotVideoDemo/Media/IVDevicePlayerViewController.swift	2021-07-08 10:45:35.000000000 +0800
@@ -366,7 +366,9 @@
             requestAuthorization { [weak self] in
                 let docPath = NSSearchPathForDirectoriesInDomains(.documentDirectory, .userDomainMask, true).first!
                 let mp4Path = docPath + "/" + Date().string() + ".mp4"
-                self?.player?.startRecording(mp4Path) { (savePath, error) in
+                self?.player?.startRecording(mp4Path, durationCallback: { (ti) in
+                    logVerbose("REC \(ti)")
+                }, completionHandler: { (savePath, error) in
                     sender.isSelected = false
                     guard let savePath = savePath else {
                         IVPopupView.showAlert(message: error?.localizedDescription ?? "录像失败", in: self?.view)
@@ -374,7 +376,7 @@
                     }
                     let url = URL(fileURLWithPath: savePath)
                     IVDevicePlayerViewController.creationRequestForAsset(url, target: self)
-                }
+                })
                 sender.isSelected = true
             }
         }
@@ -459,7 +461,7 @@
 // MARK: - 播放器代理
 extension IVDevicePlayerViewController: IVPlayerDelegate {
     func connection(_ connection: IVConnection, didUpdate status: IVConnStatus) {
-        logInfo(device.deviceID + "_\(sourceID)", "connection status:\(status.rawValue)")
+        logInfo(device.deviceID + "_\(sourceID)", "conn.status:\(status.rawValue)")
     }
     
     func connection(_ connection: IVConnection, didUpdateSpeed speed: UInt32) {
@@ -484,13 +486,14 @@
     }
     
     func player(_ player: IVPlayer, didUpdate status: IVPlayerStatus) {
-        let animating = (status == .preparing || status == .loading)
         DispatchQueue.main.async {[weak self] in
             guard let `self` = self else { return }
-            animating ? self.activityIndicatorView.startAnimating() : self.activityIndicatorView.stopAnimating()
+            status.isEqual(oneOf: .preparing, .loading, .seeking) ?
+                self.activityIndicatorView.startAnimating() :
+                self.activityIndicatorView.stopAnimating()
             
-            self.playBtn.isEnabled = (status != .preparing && status != .stopping)
-            self.playBtn.isSelected = (status == .playing)
+            self.playBtn.isEnabled = !status.isEqual(oneOf: .preparing, .stopping)
+            self.playBtn.isSelected = status.isEqual(oneOf: .loading, .playing, .seeking)
             self.speakerBtn?.isSelected = player.mute
             
             if let player = player as? IVPlayerTalkable {
@@ -518,15 +521,19 @@
     func player(_ player: IVPlayer, didEndOfFile fileTime: TimeInterval, error: Error?) {
 //        logInfo(device.deviceID + "_\(sourceID)", "didEndOfFile:", fileTime, error as Any)
     }
-        
-    func player(_ player: IVPlayer, didUpdateAudience audience: Int) {
-        logInfo(device.deviceID + "_\(sourceID)", audience)
+    
+    func player(_ player: IVPlayer, didUpdateTalkerNum talkerNum: Int) {
+        logInfo(device.deviceID + "_\(sourceID)", "talkerNum: \(talkerNum)")
+    }
+    
+    func player(_ player: IVPlayer, didUpdateViewerNum viewerNum: Int) {
+        logInfo(device.deviceID + "_\(sourceID)", "viewerNum: \(viewerNum)")
         DispatchQueue.main.async {[weak self] in
             guard let `self` = self else { return }
-            self.audienceLabel?.text = "\(audience)人观看"
+            self.audienceLabel?.text = "\(viewerNum)人观看"
         }
     }
-
+    
     func player(_ player: IVPlayer, didReceiveError error: Error) {
         let err = error as NSError
         let code = err.userInfo["ReasonCode"] ?? err.code
diff -r -u ./v1.4(200d)-Release/IoTVideo-iOS-v1.4(200d)-Release/Demo/IotVideoDemo/IotVideoDemo/Media/IVPlaybackViewController.swift ./v1.4(2070)-Debug/IoTVideo-iOS-v1.4(2070)-Debug/Demo/IotVideoDemo/IotVideoDemo/Media/IVPlaybackViewController.swift
--- ./v1.4(200d)-Release/IoTVideo-iOS-v1.4(200d)-Release/Demo/IotVideoDemo/IotVideoDemo/Media/IVPlaybackViewController.swift	2021-06-18 15:05:39.000000000 +0800
+++ ./v1.4(2070)-Debug/IoTVideo-iOS-v1.4(2070)-Debug/Demo/IotVideoDemo/IotVideoDemo/Media/IVPlaybackViewController.swift	2021-07-08 10:45:35.000000000 +0800
@@ -43,10 +43,7 @@
     /// 获取回放列表
     func loadPlaybackItems(timeRange: IVTime, completionHandler: @escaping ([IVPlaybackItem]?) -> Void) {
         indicatorLabel.isHidden = true
-        // ⚠️如果时间跨度太大请合理使用分页功能，否则可能影响查询速度
-//        IVPlaybackPlayer.getPlaybackList(ofDevice: device.deviceID, pageIndex: 0, countPerPage: 10000, startTime: timeRange.start, endTime: timeRange.end) { (page, err) in
-        // filterType: `IVTimelineItem.type`
-        IVPlaybackPlayer.getPlaybackListV2(ofDevice: device.deviceID, pageIndex: 0, countPerPage: 10000, startTime: timeRange.start, endTime: timeRange.end, filterType: nil) { (page, err) in
+        IVPlaybackPlayer.getPlaybackList(ofDevice: device.deviceID, pageIndex: 0, countPerPage: 10000, startTime: timeRange.start, endTime: timeRange.end, filterType: nil, ascendingOrder: true) { (page, err) in
             guard let items = page?.items else {
                 completionHandler(nil)
                 if let err = err as NSError? {
Only in ./v1.4(2070)-Debug/IoTVideo-iOS-v1.4(2070)-Debug/Demo/IotVideoDemo/IotVideoDemo/Targets: .DS_Store
diff -r -u ./v1.4(200d)-Release/IoTVideo-iOS-v1.4(200d)-Release/Demo/IotVideoDemo/IotVideoDemo/Utils/IVDelayWork.swift ./v1.4(2070)-Debug/IoTVideo-iOS-v1.4(2070)-Debug/Demo/IotVideoDemo/IotVideoDemo/Utils/IVDelayWork.swift
--- ./v1.4(200d)-Release/IoTVideo-iOS-v1.4(200d)-Release/Demo/IotVideoDemo/IotVideoDemo/Utils/IVDelayWork.swift	2021-06-18 15:05:37.000000000 +0800
+++ ./v1.4(2070)-Debug/IoTVideo-iOS-v1.4(2070)-Debug/Demo/IotVideoDemo/IotVideoDemo/Utils/IVDelayWork.swift	2021-07-08 10:45:33.000000000 +0800
@@ -55,7 +55,13 @@
         }
     }
     
-    // 等待（不超过deadline）条件（condition）成立之后执行任务（work）
+    /// 按条件等待执行任务
+    /// 在最多deadline秒时间内，每隔interval秒检查一次条件condition是否成立，若成立则执行任务work
+    /// - Parameters:
+    ///   - condition: 检查条件的代码块
+    ///   - work: 要执行的任务
+    ///   - deadline: 超时时间
+    ///   - interval: 检查间隔
     public static func async(wait condition: @escaping (_ canceled: inout Bool) -> Bool,
                              execute work: @escaping (_ success: Bool) -> Void,
                              deadline: DispatchTime = DispatchTime.distantFuture,
